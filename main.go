package main

import "fmt"

func preorder(node *Node) {
	if node != nil {
		fmt.Printf("%p => %+v\n", node, node)
		for i := 0; i < MAX_DEGREE+1; i++ {
			preorder(node.children[i])
		}
	}
}

func main() {
	var root Node
	var node *Node
	node = Insert(&root, 1)
	node = Insert(node, 10)
	node = Insert(node, 50)
	node = Insert(node, 100)
	node = Insert(node, 15)
	node = Insert(node, 35)
	node = Insert(node, 77)
	node = Insert(node, 23)
	node = Insert(node, 37)
	node = Insert(node, 39)
	node = Insert(node, 41)
	node = Insert(node, 42)
	node = Insert(node, 43)
	node = Insert(node, 44)
	node = Insert(node, 45)
	node = Insert(node, 46)
	node = Insert(node, 47)
	node = Insert(node, 48)
	preorder(node)
	fmt.Println()

	// fmt.Printf("%p\n", Search(node, 42))
	// node = Delete(node, 100)
	// node = Delete(node, 48)
	// node = Delete(node, 47)
	// node = Delete(node, 46)
	// node = Delete(node, 77)
	// node = Delete(node, 50)
	// node = Delete(node, 45)
	// node = Delete(node, 44)
	// node = Delete(node, 41)
	// node = Delete(node, 10)
	// node = Delete(node, 35)
	// node = Delete(node, 43)
	// node = Delete(node, 42)
	// node = Delete(node, 39)
	// preorder(node)
	// fmt.Println()
	// node = Delete(node, 37)
	// preorder(node)
	// fmt.Println()
	// node = Delete(node, 23)
	// preorder(node)
	// fmt.Println()
	// node = Delete(node, 15)
	// preorder(node)
	// fmt.Println()
	// node = Delete(node, 1)
	// preorder(node)
	// fmt.Println()

	// node = Delete(node, 50)
	// node = Delete(node, 77)
	// node = Delete(node, 100)
	// node = Delete(node, 47)
	// node = Delete(node, 48)
	// node = Delete(node, 44)
	// node = Delete(node, 45)
	// node = Delete(node, 42)
	// node = Delete(node, 43)
	// node = Delete(node, 41)
	// node = Delete(node, 37)
	// node = Delete(node, 46)
	// node = Delete(node, 39)
	// node = Delete(node, 15)
	// node = Delete(node, 23)
	// preorder(node)
	// fmt.Println()
	// node = Delete(node, 10)
	// preorder(node)
	// fmt.Println()
	// node = Delete(node, 35)
	// preorder(node)
	// fmt.Println()
	// node = Delete(node, 1)
	// preorder(node)
	// fmt.Println()

	// node = Delete(node, 42)
	// preorder(node)
	// fmt.Println()
	// node = Delete(node, 43)
	// preorder(node)
	// fmt.Println()
}
